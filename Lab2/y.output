Terminals unused in grammar

   '|'
   '&'


Rules useless in parser due to conflicts

   10 declaration: %empty


State 4 conflicts: 7 shift/reduce, 6 reduce/reduce
State 53 conflicts: 3 shift/reduce
State 54 conflicts: 3 shift/reduce
State 80 conflicts: 13 shift/reduce
State 81 conflicts: 13 shift/reduce
State 82 conflicts: 3 shift/reduce
State 83 conflicts: 13 shift/reduce
State 84 conflicts: 3 shift/reduce
State 85 conflicts: 3 shift/reduce
State 86 conflicts: 3 shift/reduce
State 87 conflicts: 3 shift/reduce
State 88 conflicts: 3 shift/reduce
State 89 conflicts: 3 shift/reduce
State 90 conflicts: 3 shift/reduce
State 91 conflicts: 3 shift/reduce
State 92 conflicts: 3 shift/reduce
State 93 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: scope

    2 scope: '{' declarations statements '}'

    3 declarations: declarations declaration
    4             | %empty

    5 statements: statements statement
    6           | %empty

    7 declaration: type ID ';'
    8            | type ID '=' expression ';'
    9            | CONST type ID '=' expression ';'
   10            | %empty

   11 statement: variable '=' expression ';'
   12          | IF '(' expression ')' statement else_statement
   13          | WHILE '(' expression ')' statement
   14          | scope
   15          | ';'

   16 else_statement: ELSE statement
   17               | %empty

   18 type: INT_T
   19     | BOOL_T
   20     | FLOAT_T
   21     | VEC_T
   22     | BVEC_T
   23     | IVEC_T

   24 expression: constructor
   25           | function
   26           | INT_C
   27           | FLOAT_C
   28           | variable
   29           | expression AND expression
   30           | expression OR expression
   31           | expression EQ expression
   32           | expression NEQ expression
   33           | expression '<' expression
   34           | expression LEQ expression
   35           | expression '>' expression
   36           | expression GEQ expression
   37           | expression '+' expression
   38           | expression '-' expression
   39           | expression '*' expression
   40           | expression '/' expression
   41           | expression '^' expression
   42           | '!' expression
   43           | '-' expression
   44           | TRUE_C
   45           | FALSE_C
   46           | '(' expression ')'

   47 variable: ID
   48         | ID '[' INT_C ']'

   49 constructor: type '(' arguments ')'

   50 function: function_name '(' arguments_opt ')'

   51 function_name: FUNC

   52 arguments_opt: %empty
   53              | arguments

   54 arguments: expression
   55          | arguments ',' expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 42
'&' (38)
'(' (40) 12 13 46 49 50
')' (41) 12 13 46 49 50
'*' (42) 39
'+' (43) 37
',' (44) 55
'-' (45) 38 43
'/' (47) 40
';' (59) 7 8 9 11 15
'<' (60) 33
'=' (61) 8 9 11
'>' (62) 35
'[' (91) 48
']' (93) 48
'^' (94) 41
'{' (123) 2
'|' (124)
'}' (125) 2
error (256)
FLOAT_T (258) 20
INT_T (259) 18
BOOL_T (260) 19
CONST (261) 9
FALSE_C (262) 45
TRUE_C (263) 44
FUNC (264) 51
IF (265) 12
WHILE (266) 13
AND (267) 29
OR (268) 30
NEQ (269) 32
EQ (270) 31
LEQ (271) 34
GEQ (272) 36
VEC_T (273) 21
BVEC_T (274) 22
IVEC_T (275) 23
FLOAT_C (276) 27
INT_C (277) 26 48
ID (278) 7 8 9 47 48
UMINUS (279)
ELSE (280) 16


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
scope (47)
    on left: 2, on right: 1 14
declarations (48)
    on left: 3 4, on right: 2 3
statements (49)
    on left: 5 6, on right: 2 5
declaration (50)
    on left: 7 8 9 10, on right: 3
statement (51)
    on left: 11 12 13 14 15, on right: 5 12 13 16
else_statement (52)
    on left: 16 17, on right: 12
type (53)
    on left: 18 19 20 21 22 23, on right: 7 8 9 49
expression (54)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 43 44 45 46, on right: 8 9 11 12 13 29 30 31 32 33 34 35 36
    37 38 39 40 41 42 43 46 54 55
variable (55)
    on left: 47 48, on right: 11 28
constructor (56)
    on left: 49, on right: 24
function (57)
    on left: 50, on right: 25
function_name (58)
    on left: 51, on right: 50
arguments_opt (59)
    on left: 52 53, on right: 50
arguments (60)
    on left: 54 55, on right: 49 53 55


State 0

    0 $accept: . program $end

    '{'  shift, and go to state 1

    program  go to state 2
    scope    go to state 3


State 1

    2 scope: '{' . declarations statements '}'

    $default  reduce using rule 4 (declarations)

    declarations  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: scope .

    $default  reduce using rule 1 (program)


State 4

    2 scope: '{' declarations . statements '}'
    3 declarations: declarations . declaration

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    CONST    shift, and go to state 9
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12

    FLOAT_T   [reduce using rule 10 (declaration)]
    INT_T     [reduce using rule 10 (declaration)]
    BOOL_T    [reduce using rule 10 (declaration)]
    CONST     [reduce using rule 10 (declaration)]
    IF        reduce using rule 6 (statements)
    IF        [reduce using rule 10 (declaration)]
    WHILE     reduce using rule 6 (statements)
    WHILE     [reduce using rule 10 (declaration)]
    VEC_T     [reduce using rule 10 (declaration)]
    BVEC_T    [reduce using rule 10 (declaration)]
    IVEC_T    [reduce using rule 10 (declaration)]
    ID        reduce using rule 6 (statements)
    ID        [reduce using rule 10 (declaration)]
    '{'       reduce using rule 6 (statements)
    '{'       [reduce using rule 10 (declaration)]
    '}'       reduce using rule 6 (statements)
    '}'       [reduce using rule 10 (declaration)]
    ';'       reduce using rule 6 (statements)
    ';'       [reduce using rule 10 (declaration)]
    $default  reduce using rule 6 (statements)

    statements   go to state 13
    declaration  go to state 14
    type         go to state 15


State 5

    0 $accept: program $end .

    $default  accept


State 6

   20 type: FLOAT_T .

    $default  reduce using rule 20 (type)


State 7

   18 type: INT_T .

    $default  reduce using rule 18 (type)


State 8

   19 type: BOOL_T .

    $default  reduce using rule 19 (type)


State 9

    9 declaration: CONST . type ID '=' expression ';'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12

    type  go to state 16


State 10

   21 type: VEC_T .

    $default  reduce using rule 21 (type)


State 11

   22 type: BVEC_T .

    $default  reduce using rule 22 (type)


State 12

   23 type: IVEC_T .

    $default  reduce using rule 23 (type)


State 13

    2 scope: '{' declarations statements . '}'
    5 statements: statements . statement

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    '{'    shift, and go to state 1
    '}'    shift, and go to state 20
    ';'    shift, and go to state 21

    scope      go to state 22
    statement  go to state 23
    variable   go to state 24


State 14

    3 declarations: declarations declaration .

    $default  reduce using rule 3 (declarations)


State 15

    7 declaration: type . ID ';'
    8            | type . ID '=' expression ';'

    ID  shift, and go to state 25


State 16

    9 declaration: CONST type . ID '=' expression ';'

    ID  shift, and go to state 26


State 17

   12 statement: IF . '(' expression ')' statement else_statement

    '('  shift, and go to state 27


State 18

   13 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 28


State 19

   47 variable: ID .
   48         | ID . '[' INT_C ']'

    '['  shift, and go to state 29

    $default  reduce using rule 47 (variable)


State 20

    2 scope: '{' declarations statements '}' .

    $default  reduce using rule 2 (scope)


State 21

   15 statement: ';' .

    $default  reduce using rule 15 (statement)


State 22

   14 statement: scope .

    $default  reduce using rule 14 (statement)


State 23

    5 statements: statements statement .

    $default  reduce using rule 5 (statements)


State 24

   11 statement: variable . '=' expression ';'

    '='  shift, and go to state 30


State 25

    7 declaration: type ID . ';'
    8            | type ID . '=' expression ';'

    '='  shift, and go to state 31
    ';'  shift, and go to state 32


State 26

    9 declaration: CONST type ID . '=' expression ';'

    '='  shift, and go to state 33


State 27

   12 statement: IF '(' . expression ')' statement else_statement

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 43
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 28

   13 statement: WHILE '(' . expression ')' statement

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 48
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 29

   48 variable: ID '[' . INT_C ']'

    INT_C  shift, and go to state 49


State 30

   11 statement: variable '=' . expression ';'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 50
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 31

    8 declaration: type ID '=' . expression ';'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 51
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 32

    7 declaration: type ID ';' .

    $default  reduce using rule 7 (declaration)


State 33

    9 declaration: CONST type ID '=' . expression ';'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 52
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 34

   45 expression: FALSE_C .

    $default  reduce using rule 45 (expression)


State 35

   44 expression: TRUE_C .

    $default  reduce using rule 44 (expression)


State 36

   51 function_name: FUNC .

    $default  reduce using rule 51 (function_name)


State 37

   27 expression: FLOAT_C .

    $default  reduce using rule 27 (expression)


State 38

   26 expression: INT_C .

    $default  reduce using rule 26 (expression)


State 39

   43 expression: '-' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 53
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 40

   42 expression: '!' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 54
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 41

   46 expression: '(' . expression ')'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 55
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 42

   49 constructor: type . '(' arguments ')'

    '('  shift, and go to state 56


State 43

   12 statement: IF '(' expression . ')' statement else_statement
   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    NEQ  shift, and go to state 59
    EQ   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69
    ')'  shift, and go to state 70


State 44

   28 expression: variable .

    $default  reduce using rule 28 (expression)


State 45

   24 expression: constructor .

    $default  reduce using rule 24 (expression)


State 46

   25 expression: function .

    $default  reduce using rule 25 (expression)


State 47

   50 function: function_name . '(' arguments_opt ')'

    '('  shift, and go to state 71


State 48

   13 statement: WHILE '(' expression . ')' statement
   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    NEQ  shift, and go to state 59
    EQ   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69
    ')'  shift, and go to state 72


State 49

   48 variable: ID '[' INT_C . ']'

    ']'  shift, and go to state 73


State 50

   11 statement: variable '=' expression . ';'
   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    NEQ  shift, and go to state 59
    EQ   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69
    ';'  shift, and go to state 74


State 51

    8 declaration: type ID '=' expression . ';'
   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    NEQ  shift, and go to state 59
    EQ   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69
    ';'  shift, and go to state 75


State 52

    9 declaration: CONST type ID '=' expression . ';'
   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    NEQ  shift, and go to state 59
    EQ   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69
    ';'  shift, and go to state 76


State 53

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression
   43           | '-' expression .

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60

    AND       [reduce using rule 43 (expression)]
    OR        [reduce using rule 43 (expression)]
    EQ        [reduce using rule 43 (expression)]
    $default  reduce using rule 43 (expression)


State 54

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression
   42           | '!' expression .

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60

    AND       [reduce using rule 42 (expression)]
    OR        [reduce using rule 42 (expression)]
    EQ        [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)


State 55

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression
   46           | '(' expression . ')'

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    NEQ  shift, and go to state 59
    EQ   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69
    ')'  shift, and go to state 77


State 56

   49 constructor: type '(' . arguments ')'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 78
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47
    arguments      go to state 79


State 57

   29 expression: expression AND . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 80
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 58

   30 expression: expression OR . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 81
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 59

   32 expression: expression NEQ . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 82
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 60

   31 expression: expression EQ . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 83
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 61

   34 expression: expression LEQ . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 84
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 62

   36 expression: expression GEQ . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 85
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 63

   33 expression: expression '<' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 86
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 64

   35 expression: expression '>' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 87
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 65

   37 expression: expression '+' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 88
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 66

   38 expression: expression '-' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 89
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 67

   39 expression: expression '*' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 90
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 68

   40 expression: expression '/' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 91
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 69

   41 expression: expression '^' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 92
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 70

   12 statement: IF '(' expression ')' . statement else_statement

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    '{'    shift, and go to state 1
    ';'    shift, and go to state 21

    scope      go to state 22
    statement  go to state 93
    variable   go to state 24


State 71

   50 function: function_name '(' . arguments_opt ')'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    $default  reduce using rule 52 (arguments_opt)

    type           go to state 42
    expression     go to state 78
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47
    arguments_opt  go to state 94
    arguments      go to state 95


State 72

   13 statement: WHILE '(' expression ')' . statement

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    '{'    shift, and go to state 1
    ';'    shift, and go to state 21

    scope      go to state 22
    statement  go to state 96
    variable   go to state 24


State 73

   48 variable: ID '[' INT_C ']' .

    $default  reduce using rule 48 (variable)


State 74

   11 statement: variable '=' expression ';' .

    $default  reduce using rule 11 (statement)


State 75

    8 declaration: type ID '=' expression ';' .

    $default  reduce using rule 8 (declaration)


State 76

    9 declaration: CONST type ID '=' expression ';' .

    $default  reduce using rule 9 (declaration)


State 77

   46 expression: '(' expression ')' .

    $default  reduce using rule 46 (expression)


State 78

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression
   54 arguments: expression .

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    NEQ  shift, and go to state 59
    EQ   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    $default  reduce using rule 54 (arguments)


State 79

   49 constructor: type '(' arguments . ')'
   55 arguments: arguments . ',' expression

    ')'  shift, and go to state 97
    ','  shift, and go to state 98


State 80

   29 expression: expression . AND expression
   29           | expression AND expression .
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    NEQ  shift, and go to state 59
    EQ   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    AND       [reduce using rule 29 (expression)]
    OR        [reduce using rule 29 (expression)]
    NEQ       [reduce using rule 29 (expression)]
    EQ        [reduce using rule 29 (expression)]
    LEQ       [reduce using rule 29 (expression)]
    GEQ       [reduce using rule 29 (expression)]
    '<'       [reduce using rule 29 (expression)]
    '>'       [reduce using rule 29 (expression)]
    '+'       [reduce using rule 29 (expression)]
    '-'       [reduce using rule 29 (expression)]
    '*'       [reduce using rule 29 (expression)]
    '/'       [reduce using rule 29 (expression)]
    '^'       [reduce using rule 29 (expression)]
    $default  reduce using rule 29 (expression)


State 81

   29 expression: expression . AND expression
   30           | expression . OR expression
   30           | expression OR expression .
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    NEQ  shift, and go to state 59
    EQ   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    AND       [reduce using rule 30 (expression)]
    OR        [reduce using rule 30 (expression)]
    NEQ       [reduce using rule 30 (expression)]
    EQ        [reduce using rule 30 (expression)]
    LEQ       [reduce using rule 30 (expression)]
    GEQ       [reduce using rule 30 (expression)]
    '<'       [reduce using rule 30 (expression)]
    '>'       [reduce using rule 30 (expression)]
    '+'       [reduce using rule 30 (expression)]
    '-'       [reduce using rule 30 (expression)]
    '*'       [reduce using rule 30 (expression)]
    '/'       [reduce using rule 30 (expression)]
    '^'       [reduce using rule 30 (expression)]
    $default  reduce using rule 30 (expression)


State 82

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   32           | expression NEQ expression .
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    NEQ  error (nonassociative)
    LEQ  error (nonassociative)
    GEQ  error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND       [reduce using rule 32 (expression)]
    OR        [reduce using rule 32 (expression)]
    EQ        [reduce using rule 32 (expression)]
    $default  reduce using rule 32 (expression)


State 83

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   31           | expression EQ expression .
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    NEQ  shift, and go to state 59
    EQ   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    AND       [reduce using rule 31 (expression)]
    OR        [reduce using rule 31 (expression)]
    NEQ       [reduce using rule 31 (expression)]
    EQ        [reduce using rule 31 (expression)]
    LEQ       [reduce using rule 31 (expression)]
    GEQ       [reduce using rule 31 (expression)]
    '<'       [reduce using rule 31 (expression)]
    '>'       [reduce using rule 31 (expression)]
    '+'       [reduce using rule 31 (expression)]
    '-'       [reduce using rule 31 (expression)]
    '*'       [reduce using rule 31 (expression)]
    '/'       [reduce using rule 31 (expression)]
    '^'       [reduce using rule 31 (expression)]
    $default  reduce using rule 31 (expression)


State 84

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   34           | expression LEQ expression .
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    NEQ  error (nonassociative)
    LEQ  error (nonassociative)
    GEQ  error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND       [reduce using rule 34 (expression)]
    OR        [reduce using rule 34 (expression)]
    EQ        [reduce using rule 34 (expression)]
    $default  reduce using rule 34 (expression)


State 85

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   36           | expression GEQ expression .
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    NEQ  error (nonassociative)
    LEQ  error (nonassociative)
    GEQ  error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND       [reduce using rule 36 (expression)]
    OR        [reduce using rule 36 (expression)]
    EQ        [reduce using rule 36 (expression)]
    $default  reduce using rule 36 (expression)


State 86

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   33           | expression '<' expression .
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    NEQ  error (nonassociative)
    LEQ  error (nonassociative)
    GEQ  error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND       [reduce using rule 33 (expression)]
    OR        [reduce using rule 33 (expression)]
    EQ        [reduce using rule 33 (expression)]
    $default  reduce using rule 33 (expression)


State 87

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   35           | expression '>' expression .
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    NEQ  error (nonassociative)
    LEQ  error (nonassociative)
    GEQ  error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    AND       [reduce using rule 35 (expression)]
    OR        [reduce using rule 35 (expression)]
    EQ        [reduce using rule 35 (expression)]
    $default  reduce using rule 35 (expression)


State 88

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   37           | expression '+' expression .
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    AND       [reduce using rule 37 (expression)]
    OR        [reduce using rule 37 (expression)]
    EQ        [reduce using rule 37 (expression)]
    $default  reduce using rule 37 (expression)


State 89

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   38           | expression '-' expression .
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    AND       [reduce using rule 38 (expression)]
    OR        [reduce using rule 38 (expression)]
    EQ        [reduce using rule 38 (expression)]
    $default  reduce using rule 38 (expression)


State 90

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   39           | expression '*' expression .
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60
    '^'  shift, and go to state 69

    AND       [reduce using rule 39 (expression)]
    OR        [reduce using rule 39 (expression)]
    EQ        [reduce using rule 39 (expression)]
    $default  reduce using rule 39 (expression)


State 91

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   40           | expression '/' expression .
   41           | expression . '^' expression

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60
    '^'  shift, and go to state 69

    AND       [reduce using rule 40 (expression)]
    OR        [reduce using rule 40 (expression)]
    EQ        [reduce using rule 40 (expression)]
    $default  reduce using rule 40 (expression)


State 92

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression
   41           | expression '^' expression .

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    EQ   shift, and go to state 60
    '^'  shift, and go to state 69

    AND       [reduce using rule 41 (expression)]
    OR        [reduce using rule 41 (expression)]
    EQ        [reduce using rule 41 (expression)]
    $default  reduce using rule 41 (expression)


State 93

   12 statement: IF '(' expression ')' statement . else_statement

    ELSE  shift, and go to state 99

    ELSE      [reduce using rule 17 (else_statement)]
    $default  reduce using rule 17 (else_statement)

    else_statement  go to state 100


State 94

   50 function: function_name '(' arguments_opt . ')'

    ')'  shift, and go to state 101


State 95

   53 arguments_opt: arguments .
   55 arguments: arguments . ',' expression

    ','  shift, and go to state 98

    $default  reduce using rule 53 (arguments_opt)


State 96

   13 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 13 (statement)


State 97

   49 constructor: type '(' arguments ')' .

    $default  reduce using rule 49 (constructor)


State 98

   55 arguments: arguments ',' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC     shift, and go to state 36
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 37
    INT_C    shift, and go to state 38
    ID       shift, and go to state 19
    '-'      shift, and go to state 39
    '!'      shift, and go to state 40
    '('      shift, and go to state 41

    type           go to state 42
    expression     go to state 102
    variable       go to state 44
    constructor    go to state 45
    function       go to state 46
    function_name  go to state 47


State 99

   16 else_statement: ELSE . statement

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    '{'    shift, and go to state 1
    ';'    shift, and go to state 21

    scope      go to state 22
    statement  go to state 103
    variable   go to state 24


State 100

   12 statement: IF '(' expression ')' statement else_statement .

    $default  reduce using rule 12 (statement)


State 101

   50 function: function_name '(' arguments_opt ')' .

    $default  reduce using rule 50 (function)


State 102

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression
   55 arguments: arguments ',' expression .

    AND  shift, and go to state 57
    OR   shift, and go to state 58
    NEQ  shift, and go to state 59
    EQ   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '^'  shift, and go to state 69

    $default  reduce using rule 55 (arguments)


State 103

   16 else_statement: ELSE statement .

    $default  reduce using rule 16 (else_statement)
